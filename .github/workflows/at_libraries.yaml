# This workflows runs when
# 1. pull_request raised to trunk branch.
# 2. tag created on at_tools repository
name: at_libraries

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - trunk
  pull_request:
    branches:
      - trunk

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - at_contact
          - at_server_status
          - at_onboarding_cli
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d # v1.3
        with:
          sdk: stable

      - name: Install dependencies in ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: dart pub get

      - name: Analyze project source in ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: dart analyze

  at_lookup_build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - at_lookup
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d # v1.3
        with:
          sdk: stable

      - name: Install dependencies in ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: dart pub get

      - name: Analyze project source in ${{ matrix.package }}
        working-directory: packages/${{ matrix.package }}
        run: dart analyze

      - name: run tests
        working-directory: packages/${{ matrix.package }}
        run: dart test --concurrency=1

  functional_tests_at_onboarding_cli:
    runs-on: ubuntu-latest
    env:
      working-directory: tests/at_onboarding_cli_functional_tests

    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v2.5.0

      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d # v1.3
        with:
          sdk: stable

      #functional tests for at_onboarding_cli
      - name: add entry to hosts file
        run: echo "127.0.0.1    vip.ve.atsign.zone" | sudo tee -a /etc/hosts

      - name: Get functional test dependencies
        working-directory: ${{ env.working-directory }}
        run: dart pub get

      - name: Start docker instance
        working-directory: ${{ env.working-directory }}
        run: sudo docker-compose up -d

      - name: Check for docker container readiness
        working-directory: ${{ env.working-directory }}
        run: dart run check_docker_readiness.dart

      - name: run pkamLoad on docker-image
        run: sudo docker exec at_onboarding_cli_functional_tests_virtualenv_1 supervisorctl start pkamLoad

      - name: Check test environment readiness
        working-directory: ${{ env.working-directory }}
        run: dart run check_test_env.dart

      - name: run tests
        working-directory: ${{ env.working-directory }}
        run: dart test --concurrency=1

      - name: kill docker image
        working-directory: ${{ env.working-directory }}
        run: sudo docker-compose down
